{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-azure-clinical-dw-dev"
		},
		"AzureDataLakeStorageLinkedService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageLinkedService'"
		},
		"ACDWMongoDbLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ACDWMongoDbLinkedService'"
		},
		"AzureDataLakeStorageLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sazureclinicaldw.dfs.core.windows.net/"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kvAzureClinicalDW.vault.azure.net/"
		},
		"AzureKeyVaultLinkedService_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kvAzureClinicalDW.vault.azure.net/"
		},
		"ACDWMongoDbLinkedService_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "azure_clinical_data_warehouse"
		},
		"ACDWSqlServerLinkedService_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DESKTOP-1PK2BM8\\SQLEXPRESS"
		},
		"ACDWSqlServerLinkedService_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "azure_clinical_data_warehouse"
		},
		"ACDWSqlServerLinkedService_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "mercy"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageLinkedService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageLinkedService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVaultLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "AzureKeyVaultLinkedService – Connects Azure Data Factory to the Key Vault instance to securely retrieve stored secrets, credentials, or keys for use in linked services and pipelines.",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVaultLinkedService_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureClinicalDWIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "This is a self-hosted integration runtime in Azure Data Factory used to securely connect on-premises (in this case, local data sources) to the cloud. It enables the ingestion of clinical and administrative datasets into ADLS Gen2 for downstream ETL and analytics.",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParquetLinkedService')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schemaname": {
						"type": "string"
					},
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().tablename, '.parquet')\n",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('parquet/', dataset().schemaname, '/', dataset().tablename, '/', formatDateTime(utcNow(), 'yyyyMMdd-HHmmss'))",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACDWMongoDbLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ACDWMongoDbLinkedService - Establishes a secure connection from Azure Data Factory to the MongoDB source using stored credentials or service principal, enabling pipelines to read/write data for ingestion and transformation.",
				"annotations": [],
				"type": "MongoDbV2",
				"typeProperties": {
					"connectionString": "[parameters('ACDWMongoDbLinkedService_connectionString')]",
					"database": "[parameters('ACDWMongoDbLinkedService_properties_typeProperties_database')]"
				},
				"connectVia": {
					"referenceName": "AzureClinicalDWIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureClinicalDWIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACDWSqlServerLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ACDWSqlServerLinkedService – Establishes a secure connection from Azure Data Factory to the SQL Server source using stored credentials or service principal, enabling pipelines to read/write data for ingestion and transformation.",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('ACDWSqlServerLinkedService_properties_typeProperties_server')]",
					"database": "[parameters('ACDWSqlServerLinkedService_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ACDWSqlServerLinkedService_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "password"
					}
				},
				"connectVia": {
					"referenceName": "AzureClinicalDWIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureClinicalDWIR')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerOnPrem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ACDWSqlServerLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ACDWSqlServerLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_all_sql_tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_TYPE = 'BASE TABLE'\nORDER BY TABLE_SCHEMA, TABLE_NAME;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerOnPrem",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM [@{item().TABLE_SCHEMA}].[@{item().TABLE_NAME}]\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerOnPrem",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ParquetLinkedService",
											"type": "DatasetReference",
											"parameters": {
												"schemaname": {
													"value": "item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"tablename": {
													"value": "item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerOnPrem')]",
				"[concat(variables('factoryId'), '/datasets/ParquetLinkedService')]"
			]
		}
	]
}